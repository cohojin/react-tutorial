{"ast":null,"code":"var _jsxFileName = \"/Users/sinhae/react-tutorial/begin-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser'; // import Hello from './Hello'; \n// import Wrapper from './Wrapper';\n// import Counter from './Counter';\n// import InputSample from './InputSample'; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('항상 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\n\nfunction App() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      // 기존에 객체 복사 \n      [name]: value // 특정 값을 덮어 씌웠다. \n\n    });\n  }, [inputs]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]);\n  const nextId = useRef(4); // 컴포넌트가 리렌더링된다 한들 같은 값을 가지고 있다.\n\n  const onCreate = useCallback(() => {\n    // 값을 추가 시킨다. \n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([...users, user]);\n    setInputs({\n      username: ' ',\n      email: ' '\n    });\n    console.log(nextId.current); // 4\n\n    nextId.current += 1; // 이 값이 바뀐다고 한들 컴포넌트가 리렌더링 되지는 않는다. \n  }, [username, email, users]);\n  const onRemove = useCallback(id => {\n    setUsers(users.filter(user => user.id !== id));\n  }, [users]);\n  const onToggle = useCallback(id => {\n    setUsers(users.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  }, [users]);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"bcN2LOGyzmrF2mS6wfoM8S/8z3o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sinhae/react-tutorial/begin-react/src/App.js"],"names":["React","useRef","useState","useMemo","useCallback","UserList","CreateUser","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","App","setInputs","onChange","e","name","value","target","setUsers","nextId","onCreate","current","onRemove","onToggle","map","count"],"mappings":"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","sourcesContent":["import React, { useRef, useState , useMemo , useCallback} from 'react';\nimport UserList from './UserList';\nimport CreateUser from'./CreateUser';\n// import Hello from './Hello'; \n// import Wrapper from './Wrapper';\n// import Counter from './Counter';\n// import InputSample from './InputSample'; \n\nfunction countActiveUsers(users){\n  console.log('항상 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs : {\n    username: '',\n    email: '',\n  },\n  users: [\n    {\n      id:1,\n      username:'velopert',\n      email: 'public.velopert@gmail.com',\n      active : true\n    },\n    {\n      id:2,\n      username:'tester',\n      email:'tester@example.com',\n      active : false\n    },\n    {\n      id:3,\n      username:'liz',\n      email:'liz@example.com',\n      active: false\n    }\n  ]\n}\nfunction App() {\n  const [inputs , setInputs] = useState({\n    username:'' ,\n    email:'',\n  });\n\n  const {username , email} = inputs;\n\n  const onChange = useCallback((e) =>{\n    const{ name,value} = e.target; \n    setInputs({\n      ...inputs, // 기존에 객체 복사 \n      [name] : value // 특정 값을 덮어 씌웠다. \n    });\n  }, [inputs]);\n\n  const [users , setUsers] = useState([\n    {\n      id:1,\n      username:'velopert',\n      email: 'public.velopert@gmail.com',\n      active : true\n    },\n    {\n      id:2,\n      username:'tester',\n      email:'tester@example.com',\n      active : false\n    },\n    {\n      id:3,\n      username:'liz',\n      email:'liz@example.com',\n      active: false\n    }\n  ]);\n\n\n\n  const nextId = useRef(4); // 컴포넌트가 리렌더링된다 한들 같은 값을 가지고 있다.\n\n  const onCreate = useCallback(() => {\n    // 값을 추가 시킨다. \n    const user = {\n      id:nextId.current,\n      username,\n      email,\n    }\n\n    setUsers([...users,user]);\n\n    setInputs({\n      username: ' ',\n      email: ' '\n    });\n\n    console.log(nextId.current); // 4\n    nextId.current += 1;  // 이 값이 바뀐다고 한들 컴포넌트가 리렌더링 되지는 않는다. \n  } ,[username , email , users]);\n\n  const onRemove = useCallback((id) =>{\n    setUsers(users.filter(user => user.id !==id));\n  \n  }, [users]);\n\n  const onToggle = useCallback((id) =>{\n    setUsers(users.map(\n      user => user.id === id ?{...user,active: !user.active}\n      : user\n    ));\n  }, [users]);\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n\n  return (\n    <>\n      <CreateUser \n        username={username} \n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n      <div>활성 사용자 수: {count} </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}